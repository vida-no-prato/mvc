<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>GreenEats - Admin</title>
    <style>
        * { margin: 0; padding: 0; box-sizing: border-box; }
        
        body {
            font-family: Arial, sans-serif;
            background: #f5f5f5;
            color: #333;
        }

        .header {
            background: linear-gradient(135deg, #4caf50, #2e7d32);
            color: white;
            padding: 20px;
            text-align: center;
        }

        .container {
            max-width: 1200px;
            margin: 20px auto;
            padding: 0 20px;
        }

        .tabs {
            display: flex;
            background: white;
            border-radius: 10px;
            overflow: hidden;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            margin-bottom: 20px;
        }

        .tab {
            flex: 1;
            padding: 15px;
            background: #f8f9fa;
            border: none;
            cursor: pointer;
            font-size: 16px;
            transition: all 0.3s;
        }

        .tab.active {
            background: #4caf50;
            color: white;
        }

        .tab-content {
            display: none;
            background: white;
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }

        .tab-content.active { display: block; }

        .form-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }

        .form-group {
            margin-bottom: 15px;
        }

        .form-group label {
            display: block;
            margin-bottom: 5px;
            font-weight: bold;
            color: #555;
        }

        .form-group input,
        .form-group select,
        .form-group textarea {
            width: 100%;
            padding: 10px;
            border: 2px solid #ddd;
            border-radius: 5px;
            font-size: 14px;
        }

        .form-group input:focus,
        .form-group select:focus,
        .form-group textarea:focus {
            border-color: #4caf50;
            outline: none;
        }

        .emoji-grid {
            display: grid;
            grid-template-columns: repeat(8, 1fr);
            gap: 5px;
            margin-top: 10px;
        }

        .emoji-btn {
            padding: 10px;
            border: 2px solid #ddd;
            background: white;
            border-radius: 5px;
            font-size: 20px;
            cursor: pointer;
            transition: all 0.3s;
        }

        .emoji-btn:hover,
        .emoji-btn.selected {
            border-color: #4caf50;
            background: #e8f5e9;
        }

        .btn {
            background: #4caf50;
            color: white;
            border: none;
            padding: 12px 20px;
            border-radius: 5px;
            cursor: pointer;
            font-size: 14px;
            transition: all 0.3s;
        }

        .btn:hover {
            background: #45a049;
        }

        .btn-danger {
            background: #f44336;
        }

        .btn-danger:hover {
            background: #da190b;
        }

        .data-table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }

        .data-table th,
        .data-table td {
            padding: 12px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }

        .data-table th {
            background: #f8f9fa;
            font-weight: bold;
        }

        .data-table tr:hover {
            background: #f8f9fa;
        }

        .actions {
            display: flex;
            gap: 10px;
        }

        .action-btn {
            padding: 5px 10px;
            border: none;
            border-radius: 3px;
            cursor: pointer;
            font-size: 12px;
        }

        .edit-btn {
            background: #2196f3;
            color: white;
        }

        .delete-btn {
            background: #f44336;
            color: white;
        }

        .stats {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }

        .stat-card {
            background: white;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            text-align: center;
        }

        .stat-number {
            font-size: 36px;
            font-weight: bold;
            color: #4caf50;
        }

        .toast {
            position: fixed;
            top: 20px;
            right: 20px;
            padding: 15px 20px;
            background: #4caf50;
            color: white;
            border-radius: 5px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.2);
            z-index: 1000;
            animation: slideIn 0.3s ease;
        }

        .toast.error {
            background: #f44336;
        }

        @keyframes slideIn {
            from { transform: translateX(100%); opacity: 0; }
            to { transform: translateX(0); opacity: 1; }
        }

        @media (max-width: 768px) {
            .form-grid { grid-template-columns: 1fr; }
            .stats { grid-template-columns: repeat(2, 1fr); }
            .emoji-grid { grid-template-columns: repeat(6, 1fr); }
            .actions { flex-direction: column; }
        }
    </style>
</head>
<body>
    <header class="header">
        <h1>üå± GreenEats - Painel Admin</h1>
    </header>

    <div class="container">
        <!-- Stats -->
        <div class="stats">
            <div class="stat-card">
                <div class="stat-number" id="totalProducts">0</div>
                <div>Produtos</div>
            </div>
            <div class="stat-card">
                <div class="stat-number" id="totalCategories">0</div>
                <div>Categorias</div>
            </div>
        </div>

        <!-- Tabs -->
        <div class="tabs">
            <button class="tab active" onclick="showTab('products')">üì¶ Produtos</button>
            <button class="tab" onclick="showTab('categories')">üè∑Ô∏è Categorias</button>
        </div>

        <!-- Products Tab -->
        <div class="tab-content active" id="products">
            <h2>Adicionar Produto</h2>
            <form id="productForm" class="form-grid">
                <div class="form-group">
                    <label>Nome *</label>
                    <input type="text" id="productName" required>
                </div>
                <div class="form-group">
                    <label>Pre√ßo (R$) *</label>
                    <input type="number" id="productPrice" step="0.01" required>
                </div>
                <div class="form-group">
                    <label>Categoria *</label>
                    <select id="productCategory" required>
                        <option value="">Selecione</option>
                    </select>
                </div>
                <div class="form-group">
                    <label>√çcone *</label>
                    <input type="hidden" id="productEmoji" required>
                    <div class="emoji-grid">
                        <button type="button" class="emoji-btn" data-emoji="ü•ó">ü•ó</button>
                        <button type="button" class="emoji-btn" data-emoji="üç≤">üç≤</button>
                        <button type="button" class="emoji-btn" data-emoji="ü•§">ü•§</button>
                        <button type="button" class="emoji-btn" data-emoji="üåØ">üåØ</button>
                        <button type="button" class="emoji-btn" data-emoji="ü•™">ü•™</button>
                        <button type="button" class="emoji-btn" data-emoji="üçú">üçú</button>
                        <button type="button" class="emoji-btn" data-emoji="ü•ô">ü•ô</button>
                        <button type="button" class="emoji-btn" data-emoji="üåÆ">üåÆ</button>
                    </div>
                </div>
                <div class="form-group" style="grid-column: 1 / -1;">
                    <label>Descri√ß√£o *</label>
                    <textarea id="productDescription" rows="3" required></textarea>
                </div>
                <div style="grid-column: 1 / -1;">
                    <button type="submit" class="btn">‚úÖ Adicionar Produto</button>
                </div>
            </form>

            <table class="data-table" id="productsTable">
                <thead>
                    <tr>
                        <th>√çcone</th>
                        <th>Nome</th>
                        <th>Categoria</th>
                        <th>Pre√ßo</th>
                        <th>A√ß√µes</th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>

        <!-- Categories Tab -->
        <div class="tab-content" id="categories">
            <h2>Adicionar Categoria</h2>
            <form id="categoryForm" class="form-grid">
                <div class="form-group">
                    <label>Nome *</label>
                    <input type="text" id="categoryName" required>
                </div>
                <div class="form-group">
                    <label>Chave *</label>
                    <input type="text" id="categoryKey" required>
                </div>
                <div class="form-group">
                    <label>√çcone *</label>
                    <input type="hidden" id="categoryEmoji" required>
                    <div class="emoji-grid">
                        <button type="button" class="emoji-btn" data-emoji="ü•ó">ü•ó</button>
                        <button type="button" class="emoji-btn" data-emoji="üç≤">üç≤</button>
                        <button type="button" class="emoji-btn" data-emoji="ü•§">ü•§</button>
                        <button type="button" class="emoji-btn" data-emoji="üåØ">üåØ</button>
                    </div>
                </div>
                <div class="form-group" style="grid-column: 1 / -1;">
                    <label>Descri√ß√£o *</label>
                    <textarea id="categoryDescription" rows="3" required></textarea>
                </div>
                <div style="grid-column: 1 / -1;">
                    <button type="submit" class="btn">‚úÖ Adicionar Categoria</button>
                </div>
            </form>

            <table class="data-table" id="categoriesTable">
                <thead>
                    <tr>
                        <th>√çcone</th>
                        <th>Nome</th>
                        <th>Chave</th>
                        <th>Produtos</th>
                        <th>A√ß√µes</th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>
    </div>

    <script>
        let categories = [
            { id: 1, name: "Saladas", key: "saladas", emoji: "ü•ó", description: "Saladas frescas" },
            { id: 2, name: "Bowls", key: "bowls", emoji: "üç≤", description: "Bowls nutritivos" },
            { id: 3, name: "Sucos", key: "sucos", emoji: "ü•§", description: "Sucos naturais" },
            { id: 4, name: "Lanches", key: "lanches", emoji: "ü•ô", description: "Lanches saud√°veis" }
        ];

        let products = [
            { id: 1, name: "Salada Caesar", description: "Alface, croutons, parmes√£o", price: 18.90, category: "saladas", emoji: "ü•ó" },
            { id: 2, name: "Bowl Proteico", description: "Quinoa, frango, abacate", price: 24.90, category: "bowls", emoji: "üç≤" }
        ];

        let nextProductId = 3;
        let nextCategoryId = 5;

        function showTab(tabName) {
            document.querySelectorAll('.tab').forEach(t => t.classList.remove('active'));
            document.querySelectorAll('.tab-content').forEach(c => c.classList.remove('active'));
            
            event.target.classList.add('active');
            document.getElementById(tabName).classList.add('active');
        }

        function updateStats() {
            document.getElementById('totalProducts').textContent = products.length;
            document.getElementById('totalCategories').textContent = categories.length;
        }

        function populateCategories() {
            const select = document.getElementById('productCategory');
            select.innerHTML = '<option value="">Selecione</option>';
            categories.forEach(cat => {
                select.innerHTML += `<option value="${cat.key}">${cat.emoji} ${cat.name}</option>`;
            });
        }

        function setupEmojiPickers() {
            document.querySelectorAll('.emoji-btn').forEach(btn => {
                btn.onclick = function(e) {
                    e.preventDefault();
                    const container = this.closest('.form-group');
                    container.querySelectorAll('.emoji-btn').forEach(b => b.classList.remove('selected'));
                    this.classList.add('selected');
                    container.querySelector('input[type="hidden"]').value = this.dataset.emoji;
                };
            });
        }

        function displayProducts() {
            const tbody = document.querySelector('#productsTable tbody');
            tbody.innerHTML = '';
            
            products.forEach(product => {
                const category = categories.find(c => c.key === product.category);
                tbody.innerHTML += `
                    <tr>
                        <td style="font-size: 24px;">${product.emoji}</td>
                        <td><strong>${product.name}</strong><br><small>${product.description}</small></td>
                        <td>${category ? category.emoji + ' ' + category.name : 'N/A'}</td>
                        <td><strong>R$ ${product.price.toFixed(2).replace('.', ',')}</strong></td>
                        <td class="actions">
                            <button class="action-btn delete-btn" onclick="deleteProduct(${product.id})">üóëÔ∏è</button>
                        </td>
                    </tr>
                `;
            });
        }

        function displayCategories() {
            const tbody = document.querySelector('#categoriesTable tbody');
            tbody.innerHTML = '';
            
            categories.forEach(category => {
                const productCount = products.filter(p => p.category === category.key).length;
                tbody.innerHTML += `
                    <tr>
                        <td style="font-size: 24px;">${category.emoji}</td>
                        <td><strong>${category.name}</strong><br><small>${category.description}</small></td>
                        <td><code>${category.key}</code></td>
                        <td><span style="background: #e3f2fd; padding: 5px 10px; border-radius: 15px; color: #1976d2;">${productCount}</span></td>
                        <td class="actions">
                            <button class="action-btn delete-btn" onclick="deleteCategory(${category.id})">üóëÔ∏è</button>
                        </td>
                    </tr>
                `;
            });
        }

        function showToast(message, type = 'success') {
            const toast = document.createElement('div');
            toast.className = `toast ${type}`;
            toast.textContent = message;
            document.body.appendChild(toast);
            
            setTimeout(() => toast.remove(), 3000);
        }

        function deleteProduct(id) {
            if (confirm('Excluir produto?')) {
                products = products.filter(p => p.id !== id);
                displayProducts();
                updateStats();
                showToast('Produto exclu√≠do!');
            }
        }

        function deleteCategory(id) {
            const category = categories.find(c => c.id === id);
            const hasProducts = products.some(p => p.category === category.key);
            
            if (hasProducts && !confirm('Esta categoria tem produtos. Excluir mesmo assim?')) return;
            
            categories = categories.filter(c => c.id !== id);
            products.forEach(p => { if (p.category === category.key) p.category = ''; });
            
            displayCategories();
            displayProducts();
            populateCategories();
            updateStats();
            showToast('Categoria exclu√≠da!');
        }

        // Form handlers
        document.getElementById('productForm').onsubmit = function(e) {
            e.preventDefault();
            
            if (!document.getElementById('productEmoji').value) {
                showToast('Selecione um √≠cone!', 'error');
                return;
            }
            
            const product = {
                id: nextProductId++,
                name: document.getElementById('productName').value,
                description: document.getElementById('productDescription').value,
                price: parseFloat(document.getElementById('productPrice').value),
                category: document.getElementById('productCategory').value,
                emoji: document.getElementById('productEmoji').value
            };
            
            products.push(product);
            this.reset();
            document.getElementById('productEmoji').value = '';
            document.querySelectorAll('#products .emoji-btn').forEach(b => b.classList.remove('selected'));
            
            displayProducts();
            updateStats();
            showToast('Produto adicionado!');
        };

        document.getElementById('categoryForm').onsubmit = function(e) {
            e.preventDefault();
            
            if (!document.getElementById('categoryEmoji').value) {
                showToast('Selecione um √≠cone!', 'error');
                return;
            }
            
            const key = document.getElementById('categoryKey').value;
            if (categories.find(c => c.key === key)) {
                showToast('Chave j√° existe!', 'error');
                return;
            }
            
            const category = {
                id: nextCategoryId++,
                name: document.getElementById('categoryName').value,
                key: key,
                emoji: document.getElementById('categoryEmoji').value,
                description: document.getElementById('categoryDescription').value
            };
            
            categories.push(category);
            this.reset();
            document.getElementById('categoryEmoji').value = '';
            document.querySelectorAll('#categories .emoji-btn').forEach(b => b.classList.remove('selected'));
            
            displayCategories();
            populateCategories();
            updateStats();
            showToast('Categoria adicionada!');
        };

        // Auto-generate key
        document.getElementById('categoryName').oninput = function() {
            const key = this.value.toLowerCase().replace(/[^a-z0-9]/g, '').substring(0, 20);
            document.getElementById('categoryKey').value = key;
        };

        // Initialize
        updateStats();
        populateCategories();
        displayProducts();
        displayCategories();
        setupEmojiPickers();
    </script>
</body>
</html>