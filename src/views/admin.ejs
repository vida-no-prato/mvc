<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Vida no Prato - Colaborador</title>
    <link rel="stylesheet" href="/css/painel-admin.css">
    <style>
    /* ...estilos removidos, agora tudo usa painel-admin.css... */
    </style>
</head>
<body>
    <header class="header">
    <a href="/" class="btn-voltar-inicio">‚Üê Voltar ao In√≠cio</a>
        <h1 style="text-align:center;margin-top:32px;">üå± Vida no Prato - Painel Colaborador</h1>
        <p style="text-align:center;">Gerencie seus produtos e categorias</p>
        <div id="welcomeAnimation" style="display:none;position:fixed;bottom:30px;right:30px;z-index:2000;min-width:340px;max-width:90vw;padding:22px 32px;background:linear-gradient(135deg,#4caf50,#2e7d32);color:#fff;border-radius:16px;box-shadow:0 8px 32px rgba(46,125,50,0.18);font-size:1.25rem;animation:fadeIn 0.7s;">
            <span style="font-size:1.7rem;vertical-align:middle;margin-right:10px;">üå±</span>
            Bem-vindo ao painel administrativo do Vida no Prato!!
        </div>
    </header>
    <div style="max-width:420px;margin:48px auto 0 auto;animation:slideDownFade 0.7s;background:#fff;border-radius:22px;padding:38px 32px 32px 32px;position:relative;z-index:10;text-align:center;box-shadow:none;">
        <h2 style="color:#2e7d32;font-size:2rem;margin-bottom:8px;">Bem-vindo ao Painel do Colaborador</h2>
    </div>

    <!-- Auth Modal -->
    <div id="authModal" class="auth-modal" style="display:flex;align-items:center;justify-content:center;">
        <div class="auth-modal-content">
            <div class="auth-header">
                <h2 id="authTitle">Acesso ao Painel do Colaborador</h2>
                <p>Fa√ßa login ou cadastre-se para acessar o painel.</p>
            </div>
            <div class="auth-body">
                <div class="auth-tabs">
                    <button class="auth-tab active" onclick="switchTab('login')">Entrar</button>
                    <button class="auth-tab" onclick="switchTab('register')">Cadastrar</button>
                </div>
                <!-- Login Form -->
                <form class="auth-form active" id="loginForm">
                    <div class="form-group">
                        <label for="loginEmail">E-mail</label>
                        <input type="email" id="loginEmail" placeholder="seu@email.com" required>
                    </div>
                    <div class="form-group">
                        <label for="loginPassword">Senha</label>
                        <input type="password" id="loginPassword" placeholder="‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢" required>
                        <span class="password-toggle" onclick="togglePassword('loginPassword')"></span>
                    </div>
                    <button type="submit" class="auth-submit">Entrar na Conta</button>
                </form>
                <!-- Register Form -->
                <form class="auth-form" id="registerForm">
                    <div class="form-group">
                        <label for="registerName">Nome Completo</label>
                        <input type="text" id="registerName" placeholder="Seu nome completo" required>
                    </div>
                    <div class="form-group">
                        <label for="registerEmail">E-mail</label>
                        <input type="email" id="registerEmail" placeholder="seu@email.com" required>
                    </div>
                    <div class="form-group">
                        <label for="registerPassword">Senha</label>
                        <input type="password" id="registerPassword" placeholder="M√≠nimo 6 caracteres" required>
                        <span class="password-toggle" onclick="togglePassword('registerPassword')"></span>
                    </div>
                    <div class="form-group">
                        <label for="confirmPassword">Confirmar Senha</label>
                        <input type="password" id="confirmPassword" placeholder="Confirme sua senha" required>
                        <span class="password-toggle" onclick="togglePassword('confirmPassword')"></span>
                    </div>
                    <button type="submit" class="auth-submit">Criar Conta</button>
                </form>
            </div>
        </div>
    </div>

    <!-- Painel Colaborador Adaptado -->
    <div id="colaboradorPanel" style="display:none;">
        <div class="container">
            <!-- Stats -->
            <div class="stats">
                <div class="stat-card">
                    <div class="stat-number" id="totalProducts">0</div>
                    <div>Produtos</div>
                </div>
                <div class="stat-card">
                    <div class="stat-number" id="totalCategories">0</div>
                    <div>Categorias</div>
                </div>
            </div>
            <!-- Tabs -->
            <div class="tabs">
                <button class="tab active" onclick="showTab('products')">üì¶ Produtos</button>
                <button class="tab" onclick="showTab('categories')">üè∑Ô∏è Categorias</button>
            </div>
            <!-- Products Tab -->
            <div class="tab-content active" id="products">
                <h2>Adicionar Produto</h2>
                <form id="productForm" class="form-grid">
                    <div class="form-group">
                        <label>Nome *</label>
                        <input type="text" id="productName" required>
                    </div>
                    <div class="form-group">
                        <label>Pre√ßo (R$) *</label>
                        <input type="number" id="productPrice" step="0.01" required>
                    </div>
                    <div class="form-group">
                        <label>Categoria *</label>
                        <select id="productCategory" required>
                            <option value="">Selecione</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label>√çcone *</label>
                        <input type="hidden" id="productEmoji" required>
                        <div class="emoji-grid">
                            <button type="button" class="emoji-btn" data-emoji="ü•ó">ü•ó</button>
                            <button type="button" class="emoji-btn" data-emoji="üç≤">üç≤</button>
                            <button type="button" class="emoji-btn" data-emoji="ü•§">ü•§</button>
                            <button type="button" class="emoji-btn" data-emoji="üåØ">üåØ</button>
                            <button type="button" class="emoji-btn" data-emoji="ü•™">ü•™</button>
                            <button type="button" class="emoji-btn" data-emoji="üçú">üçú</button>
                            <button type="button" class="emoji-btn" data-emoji="ü•ô">ü•ô</button>
                            <button type="button" class="emoji-btn" data-emoji="üåÆ">üåÆ</button>
                        </div>
                    </div>
                    <div class="form-group" style="grid-column: 1 / -1;">
                        <label>Descri√ß√£o *</label>
                        <textarea id="productDescription" rows="3" required></textarea>
                    </div>
                    <div style="grid-column: 1 / -1;">
                        <button type="submit" class="btn">‚úÖ Adicionar Produto</button>
                    </div>
                </form>
                <table class="data-table" id="productsTable">
                    <thead>
                        <tr>
                            <th>√çcone</th>
                            <th>Nome</th>
                            <th>Categoria</th>
                            <th>Pre√ßo</th>
                            <th>A√ß√µes</th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
            <!-- Categories Tab -->
            <div class="tab-content" id="categories">
                <h2>Adicionar Categoria</h2>
                <form id="categoryForm" class="form-grid">
                    <div class="form-group">
                        <label>Nome *</label>
                        <input type="text" id="categoryName" required>
                    </div>
                    <div class="form-group">
                        <label>Chave *</label>
                        <input type="text" id="categoryKey" required>
                    </div>
                    <div class="form-group">
                        <label>√çcone *</label>
                        <input type="hidden" id="categoryEmoji" required>
                        <div class="emoji-grid">
                            <button type="button" class="emoji-btn" data-emoji="ü•ó">ü•ó</button>
                            <button type="button" class="emoji-btn" data-emoji="üç≤">üç≤</button>
                            <button type="button" class="emoji-btn" data-emoji="ü•§">ü•§</button>
                            <button type="button" class="emoji-btn" data-emoji="üåØ">üåØ</button>
                        </div>
                    </div>
                    <div class="form-group" style="grid-column: 1 / -1;">
                        <label>Descri√ß√£o *</label>
                        <textarea id="categoryDescription" rows="3" required></textarea>
                    </div>
                    <div style="grid-column: 1 / -1;">
                        <button type="submit" class="btn">‚úÖ Adicionar Categoria</button>
                    </div>
                </form>
                <table class="data-table" id="categoriesTable">
                    <thead>
                        <tr>
                            <th>√çcone</th>
                            <th>Nome</th>
                            <th>Chave</th>
                            <th>Produtos</th>
                            <th>A√ß√µes</th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
        </div>
    </div>
    <script>
        // Login/Cadastro funcional para colaboradores
        document.addEventListener('DOMContentLoaded', function() {
            const authModal = document.getElementById('authModal');
            const adminPanel = document.getElementById('adminPanelWrapper');
            const colaboradorPanel = document.getElementById('colaboradorPanel');
            const loginForm = document.getElementById('loginForm');
            const registerForm = document.getElementById('registerForm');
            if (loginForm) {
                loginForm.addEventListener('submit', function(e) {
                    e.preventDefault();
                    // Simula login colaborador
                    authModal.style.display = 'none';
                    if (adminPanel) adminPanel.style.display = 'none';
                    if (colaboradorPanel) colaboradorPanel.style.display = 'block';
                    loginForm.reset();
                });
            }
            if (registerForm) {
                registerForm.addEventListener('submit', function(e) {
                    e.preventDefault();
                    // Simula cadastro colaborador
                    authModal.style.display = 'none';
                    if (adminPanel) adminPanel.style.display = 'none';
                    if (colaboradorPanel) colaboradorPanel.style.display = 'block';
                    registerForm.reset();
                });
            }
        });
        // Alterna abas do modal de autentica√ß√£o
        function switchTab(tab) {
            document.querySelectorAll('.auth-tab').forEach(btn => btn.classList.remove('active'));
            document.querySelectorAll('.auth-form').forEach(form => form.classList.remove('active'));
            if (tab === 'login') {
                document.getElementById('authTitle').textContent = 'Acesso ao Painel Admin';
                document.getElementById('loginForm').classList.add('active');
                document.querySelector('.auth-tab[onclick*="login"]').classList.add('active');
            } else {
                document.getElementById('authTitle').textContent = 'Cadastro no Painel Admin';
                document.getElementById('registerForm').classList.add('active');
                document.querySelector('.auth-tab[onclick*="register"]').classList.add('active');
            }
        }

        // Alterna visualiza√ß√£o da senha
        function togglePassword(inputId) {
            const input = document.getElementById(inputId);
            const toggle = input.nextElementSibling;
            if (input.type === 'password') {
                input.type = 'text';
                toggle.textContent = 'üôà';
            } else {
                input.type = 'password';
                toggle.textContent = 'üëÅÔ∏è';
            }
        }
        // Tabs do modal admin
        function switchAdminTab(tab) {
            document.querySelectorAll('.auth-tab').forEach(btn => btn.classList.remove('active'));
            document.querySelectorAll('.auth-form').forEach(form => form.classList.remove('active'));
            if (tab === 'login') {
                document.getElementById('adminAuthTitle').textContent = 'Bem-vindo ao Painel Admin';
                document.getElementById('adminLoginForm').classList.add('active');
                document.querySelector('.auth-tab[onclick*="login"]').classList.add('active');
            } else {
                document.getElementById('adminAuthTitle').textContent = 'Cadastro de Empresa/Colaborador';
                document.getElementById('adminRegisterForm').classList.add('active');
                document.querySelector('.auth-tab[onclick*="register"]').classList.add('active');
            }
        }
        // Toggle senha
        function togglePassword(inputId) {
            const input = document.getElementById(inputId);
            const toggle = input.nextElementSibling;
            if (input.type === 'password') {
                input.type = 'text';
                toggle.textContent = 'üôà';
            } else {
                input.type = 'password';
                toggle.textContent = 'üëÅÔ∏è';
            }
        }
        // Login/Cadastro obrigat√≥rio
        // ...existing code...
        // Anima√ß√£o de boas-vindas
        function showWelcomeAnimation() {
            const anim = document.getElementById('welcomeAnimation');
            anim.style.display = 'block';
            anim.style.animation = 'fadeIn 0.7s';
            setTimeout(() => {
                anim.style.animation = 'fadeOut 0.7s';
                setTimeout(() => {
                    anim.style.display = 'none';
                    anim.style.animation = 'fadeIn 0.7s';
                }, 700);
            }, 2200);
        }

        // Tabs
        function showTab(tabName) {
            document.querySelectorAll('.tab').forEach(tab => tab.classList.remove('active'));
            if (event && event.target) {
                event.target.classList.add('active');
            }
            document.querySelectorAll('.tab-content').forEach(content => content.classList.remove('active'));
            document.getElementById(tabName).classList.add('active');
        }

        // Emoji picker
        function setupEmojiPickers() {
            document.querySelectorAll('.emoji-btn').forEach(btn => {
                btn.onclick = function() {
                    const input = btn.closest('.form-group').querySelector('input[type="hidden"]');
                    input.value = btn.dataset.emoji;
                    btn.closest('.emoji-grid').querySelectorAll('.emoji-btn').forEach(b => b.classList.remove('selected'));
                    btn.classList.add('selected');
                };
            });
        }

        // Preencher categorias do select
        async function populateCategories() {
            const res = await fetch('/categorias');
            const categorias = await res.json();
            const select = document.getElementById('productCategory');
            select.innerHTML = '<option value="">Selecione</option>';
            categorias.forEach(cat => {
                const option = document.createElement('option');
                option.value = cat.id;
                option.textContent = `${cat.emoji || ''} ${cat.nome}`;
                select.appendChild(option);
            });
            document.getElementById('totalCategories').textContent = categorias.length;
        }

        // Listar produtos
        async function displayProducts() {
            const res = await fetch('/produtos');
            const produtos = await res.json();
            const tbody = document.querySelector('#productsTable tbody');
            tbody.innerHTML = '';
            produtos.forEach(produto => {
                const tr = document.createElement('tr');
                tr.innerHTML = `
                    <td>${produto.emoji || ''}</td>
                    <td>${produto.nome}</td>
                    <td>${produto.categoria}</td>
                    <td>R$ ${(Number(produto.preco) ? Number(produto.preco).toFixed(2).replace('.', ',') : '0,00')}</td>
                    <td>
                        <button class="btn btn-sm" onclick="editProduct(${produto.id})">‚úèÔ∏è</button>
                        <button class="btn btn-sm btn-danger" onclick="deleteProduct(${produto.id})">üóëÔ∏è</button>
                    </td>
                `;
                tbody.appendChild(tr);
            });
            document.getElementById('totalProducts').textContent = produtos.length;
        }

        // Listar categorias
        async function displayCategories() {
            const res = await fetch('/categorias');
            const categorias = await res.json();
            const tbody = document.querySelector('#categoriesTable tbody');
            tbody.innerHTML = '';
            categorias.forEach(cat => {
                const tr = document.createElement('tr');
                tr.innerHTML = `
                    <td>${cat.emoji || ''}</td>
                    <td>${cat.nome}</td>
                    <td>${cat.chave}</td>
                    <td>${cat.total_produtos || 0}</td>
                    <td>
                        <button class="btn btn-sm" onclick="editCategory(${cat.id})">‚úèÔ∏è</button>
                        <button class="btn btn-sm btn-danger" onclick="deleteCategory(${cat.id})">üóëÔ∏è</button>
                    </td>
                `;
                tbody.appendChild(tr);
            });
        }

        // Adicionar ou editar produto
        document.getElementById('productForm').onsubmit = async function(e) {
            e.preventDefault();
            const id = document.getElementById('productIdEdit').value;
            const nome = document.getElementById('productName').value;
            const preco = document.getElementById('productPrice').value;
            const categoria_id = document.getElementById('productCategory').value;
            const emoji = document.getElementById('productEmoji').value;
            const descricao = document.getElementById('productDescription').value;

            if (!nome || !preco || !categoria_id || !emoji || !descricao) {
                alert('Preencha todos os campos!');
                return;
            }

            const payload = { nome, preco, categoria_id, emoji, descricao };
            let res;
            if (id) {
                res = await fetch(`/produtos/${id}`, {
                    method: 'PUT',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(payload)
                });
            } else {
                res = await fetch('/produtos', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(payload)
                });
            }

            if (res.ok) {
                alert(id ? 'Produto editado com sucesso!' : 'Produto criado com sucesso!');
                this.reset();
                document.getElementById('productIdEdit').value = '';
                document.getElementById('productFormTitle').textContent = 'Adicionar Produto';
                document.getElementById('productSubmitBtn').textContent = '‚úÖ Adicionar Produto';
                document.getElementById('productCancelBtn').style.display = 'none';
                displayProducts();
            } else {
                alert('Erro ao salvar produto!');
            }
        };

        // Editar produto
        window.editProduct = async function(id) {
            const res = await fetch(`/produtos`);
            const produtos = await res.json();
            const produto = produtos.find(p => p.id === id);
            if (!produto) return;
            document.getElementById('productIdEdit').value = produto.id;
            document.getElementById('productName').value = produto.nome;
            document.getElementById('productPrice').value = produto.preco;
            document.getElementById('productCategory').value = produto.categoria_id;
            document.getElementById('productEmoji').value = produto.emoji;
            document.getElementById('productDescription').value = produto.descricao;
            document.getElementById('productFormTitle').textContent = 'Editar Produto';
            document.getElementById('productSubmitBtn').textContent = 'üíæ Salvar Altera√ß√µes';
            document.getElementById('productCancelBtn').style.display = 'inline-block';
        };

        // Cancelar edi√ß√£o produto
        document.getElementById('productCancelBtn').onclick = function() {
            document.getElementById('productForm').reset();
            document.getElementById('productIdEdit').value = '';
            document.getElementById('productFormTitle').textContent = 'Adicionar Produto';
            document.getElementById('productSubmitBtn').textContent = '‚úÖ Adicionar Produto';
            this.style.display = 'none';
        };

        // Excluir produto
        window.deleteProduct = async function(id) {
            if (!confirm('Tem certeza que deseja excluir este produto?')) return;
            const res = await fetch(`/produtos/${id}`, { method: 'DELETE' });
            if (res.ok) {
                alert('Produto exclu√≠do!');
                displayProducts();
            } else {
                alert('Erro ao excluir produto!');
            }
        };

        // Adicionar ou editar categoria
        document.getElementById('categoryForm').onsubmit = async function(e) {
            e.preventDefault();
            const id = document.getElementById('categoryIdEdit').value;
            const nome = document.getElementById('categoryName').value;
            const chave = document.getElementById('categoryKey').value;
            const emoji = document.getElementById('categoryEmoji').value;
            const descricao = document.getElementById('categoryDescription').value;

            if (!nome || !chave || !emoji || !descricao) {
                alert('Preencha todos os campos!');
                return;
            }

            const payload = { nome, chave, emoji, descricao };
            let res;
            if (id) {
                res = await fetch(`/categorias/${id}`, {
                    method: 'PUT',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(payload)
                });
            } else {
                res = await fetch('/categorias', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(payload)
                });
            }

            if (res.ok) {
                alert(id ? 'Categoria editada com sucesso!' : 'Categoria criada com sucesso!');
                this.reset();
                document.getElementById('categoryIdEdit').value = '';
                document.getElementById('categoryFormTitle').textContent = 'Adicionar Categoria';
                document.getElementById('categorySubmitBtn').textContent = '‚úÖ Adicionar Categoria';
                document.getElementById('categoryCancelBtn').style.display = 'none';
                populateCategories();
                displayCategories();
            } else {
                alert('Erro ao salvar categoria!');
            }
        };

        // Editar categoria
        window.editCategory = async function(id) {
            const res = await fetch(`/categorias`);
            const categorias = await res.json();
            const cat = categorias.find(c => c.id === id);
            if (!cat) return;
            document.getElementById('categoryIdEdit').value = cat.id;
            document.getElementById('categoryName').value = cat.nome;
            document.getElementById('categoryKey').value = cat.chave;
            document.getElementById('categoryEmoji').value = cat.emoji;
            document.getElementById('categoryDescription').value = cat.descricao;
            document.getElementById('categoryFormTitle').textContent = 'Editar Categoria';
            document.getElementById('categorySubmitBtn').textContent = 'üíæ Salvar Altera√ß√µes';
            document.getElementById('categoryCancelBtn').style.display = 'inline-block';
        };

        // Cancelar edi√ß√£o categoria
        document.getElementById('categoryCancelBtn').onclick = function() {
            document.getElementById('categoryForm').reset();
            document.getElementById('categoryIdEdit').value = '';
            document.getElementById('categoryFormTitle').textContent = 'Adicionar Categoria';
            document.getElementById('categorySubmitBtn').textContent = '‚úÖ Adicionar Categoria';
            this.style.display = 'none';
        };

        // Excluir categoria
        window.deleteCategory = async function(id) {
            if (!confirm('Tem certeza que deseja excluir esta categoria?')) return;
            const res = await fetch(`/categorias/${id}`, { method: 'DELETE' });
            if (res.ok) {
                alert('Categoria exclu√≠da!');
                populateCategories();
                displayCategories();
            } else {
                alert('Erro ao excluir categoria!');
            }
        };

        document.addEventListener('DOMContentLoaded', function() {
            showWelcomeAnimation();
            populateCategories();
            displayProducts();
            displayCategories();
            setupEmojiPickers();
        });

        // Painel Colaborador - Tabs
        function showTab(tab) {
            document.querySelectorAll('#colaboradorPanel .tab').forEach(btn => btn.classList.remove('active'));
            document.querySelectorAll('#colaboradorPanel .tab-content').forEach(tc => tc.classList.remove('active'));
            document.querySelector(`#colaboradorPanel .tab[onclick*="showTab('${tab}')"]`).classList.add('active');
            document.getElementById(tab).classList.add('active');
        }

        // Painel Colaborador - Emoji Picker
        document.querySelectorAll('#colaboradorPanel .emoji-btn').forEach(btn => {
            btn.addEventListener('click', function() {
                const group = this.parentElement;
                group.querySelectorAll('.emoji-btn').forEach(b => b.classList.remove('selected'));
                this.classList.add('selected');
                const input = group.previousElementSibling;
                input.value = this.dataset.emoji;
            });
        });

        // Painel Colaborador - Formul√°rios
        document.getElementById('productForm').addEventListener('submit', function(e) {
            e.preventDefault();
            // Simula√ß√£o de adi√ß√£o de produto
            const name = document.getElementById('productName').value;
            const price = document.getElementById('productPrice').value;
            const cat = document.getElementById('productCategory').value;
            const emoji = document.getElementById('productEmoji').value;
            const desc = document.getElementById('productDescription').value;
            if (!name || !price || !cat || !emoji || !desc) return;
            const tbody = document.querySelector('#productsTable tbody');
            const tr = document.createElement('tr');
            tr.innerHTML = `<td>${emoji}</td><td>${name}</td><td>${cat}</td><td>R$ ${parseFloat(price).toFixed(2)}</td><td><button onclick="this.closest('tr').remove()">üóëÔ∏è</button></td>`;
            tbody.appendChild(tr);
            document.getElementById('productForm').reset();
            document.querySelectorAll('#productForm .emoji-btn').forEach(b => b.classList.remove('selected'));
            document.getElementById('productEmoji').value = '';
            updateStats();
        });
        document.getElementById('categoryForm').addEventListener('submit', function(e) {
            e.preventDefault();
            // Simula√ß√£o de adi√ß√£o de categoria
            const name = document.getElementById('categoryName').value;
            const key = document.getElementById('categoryKey').value;
            const emoji = document.getElementById('categoryEmoji').value;
            const desc = document.getElementById('categoryDescription').value;
            if (!name || !key || !emoji || !desc) return;
            const tbody = document.querySelector('#categoriesTable tbody');
            const tr = document.createElement('tr');
            tr.innerHTML = `<td>${emoji}</td><td>${name}</td><td>${key}</td><td>0</td><td><button onclick="this.closest('tr').remove()">üóëÔ∏è</button></td>`;
            tbody.appendChild(tr);
            document.getElementById('categoryForm').reset();
            document.querySelectorAll('#categoryForm .emoji-btn').forEach(b => b.classList.remove('selected'));
            document.getElementById('categoryEmoji').value = '';
            updateCategoryOptions();
            updateStats();
        });
        function updateCategoryOptions() {
            const select = document.getElementById('productCategory');
            const cats = Array.from(document.querySelectorAll('#categoriesTable tbody tr')).map(tr => tr.children[1].textContent);
            select.innerHTML = '<option value="">Selecione</option>' + cats.map(c => `<option value="${c}">${c}</option>`).join('');
        }
        function updateStats() {
            document.getElementById('totalProducts').textContent = document.querySelectorAll('#productsTable tbody tr').length;
            document.getElementById('totalCategories').textContent = document.querySelectorAll('#categoriesTable tbody tr').length;
        }
        // Atualiza stats e selects ao remover
        document.querySelector('#productsTable tbody').addEventListener('click', updateStats);
        document.querySelector('#categoriesTable tbody').addEventListener('click', function() {
            updateCategoryOptions();
            updateStats();
        });
    </script>
</body>
</html>
